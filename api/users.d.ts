/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["Auth_Login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["Auth_Logout"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/refresh": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["Auth_Refresh"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/signup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["Auth_Signup"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/validate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["Auth_Validate"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Users_ListUsers"];
        put?: never;
        post: operations["Users_CreateUser"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Users_SearchUsers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Users_GetUser"];
        put?: never;
        post?: never;
        delete: operations["Users_DeleteUser"];
        options?: never;
        head?: never;
        patch: operations["Users_UpdateUser"];
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        "auth.v1.LoginRequest": {
            username?: string;
            password?: string;
        };
        "auth.v1.LoginResponse": {
            accessToken?: string;
            refreshToken?: string;
        };
        "auth.v1.LogoutRequest": {
            refreshToken?: string;
        };
        "auth.v1.LogoutResponse": {
            accessToken?: string;
            refreshToken?: string;
        };
        "auth.v1.RefreshRequest": {
            refreshToken?: string;
        };
        "auth.v1.RefreshResponse": {
            accessToken?: string;
            refreshToken?: string;
        };
        "auth.v1.SignupRequest": {
            username?: string;
            email?: string;
            password?: string;
        };
        "auth.v1.SignupResponse": {
            accessToken?: string;
            refreshToken?: string;
        };
        "auth.v1.ValidateRequest": {
            accessToken?: string;
        };
        "auth.v1.ValidateResponse": {
            valid?: boolean;
            id?: string;
            username?: string;
            email?: string;
            exp?: string;
        };
        "users.v1.CreateUserRequest": {
            username?: string;
            email?: string;
            phone?: string;
            password?: string;
            picture?: string;
        };
        "users.v1.CreateUserResponse": {
            id?: string;
        };
        "users.v1.DeleteUserResponse": {
            id?: string;
        };
        "users.v1.GetUserResponse": {
            user?: components["schemas"]["users.v1.User"];
        };
        "users.v1.ListUsersResponse": {
            users?: components["schemas"]["users.v1.User"][];
            pagination?: components["schemas"]["users.v1.Pagination"];
        };
        "users.v1.Pagination": {
            /** Format: int32 */
            page?: number;
            /** Format: int32 */
            pageSize?: number;
        };
        "users.v1.SearchUsersResponse": {
            users?: components["schemas"]["users.v1.User"][];
            pagination?: components["schemas"]["users.v1.Pagination"];
        };
        "users.v1.UpdateUserRequest": {
            id?: string;
            username?: string;
            email?: string;
            phone?: string;
            password?: string;
            picture?: string;
        };
        "users.v1.UpdateUserResponse": {
            id?: string;
        };
        "users.v1.User": {
            id?: string;
            username?: string;
            email?: string;
            phone?: string;
            password?: string;
            picture?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    Auth_Login: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["auth.v1.LoginRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["auth.v1.LoginResponse"];
                };
            };
        };
    };
    Auth_Logout: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["auth.v1.LogoutRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["auth.v1.LogoutResponse"];
                };
            };
        };
    };
    Auth_Refresh: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["auth.v1.RefreshRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["auth.v1.RefreshResponse"];
                };
            };
        };
    };
    Auth_Signup: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["auth.v1.SignupRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["auth.v1.SignupResponse"];
                };
            };
        };
    };
    Auth_Validate: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["auth.v1.ValidateRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["auth.v1.ValidateResponse"];
                };
            };
        };
    };
    Users_ListUsers: {
        parameters: {
            query?: {
                "pagination.page"?: number;
                "pagination.pageSize"?: number;
                "filter.username"?: string;
                "filter.email"?: string;
                "filter.phone"?: string;
                "filter.password"?: string;
                "filter.picture"?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["users.v1.ListUsersResponse"];
                };
            };
        };
    };
    Users_CreateUser: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["users.v1.CreateUserRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["users.v1.CreateUserResponse"];
                };
            };
        };
    };
    Users_SearchUsers: {
        parameters: {
            query?: {
                query?: string;
                "pagination.page"?: number;
                "pagination.pageSize"?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["users.v1.SearchUsersResponse"];
                };
            };
        };
    };
    Users_GetUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["users.v1.GetUserResponse"];
                };
            };
        };
    };
    Users_DeleteUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["users.v1.DeleteUserResponse"];
                };
            };
        };
    };
    Users_UpdateUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["users.v1.UpdateUserRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["users.v1.UpdateUserResponse"];
                };
            };
        };
    };
}
